$bar-bg-color: #ced4da;
$bar-bg-disabled-color: #f1f3f5;
$bar-width: 44px;
$bar-height: 16px;
$bar-border: none;

$knob-bg-color: #ffffff;
$knob-bg-color-focused: #fafafa;
$knob-bg-disabled-color: #ced4da;
$knob-size: 26px;
$knob-border: solid 1px rgba(0, 0, 0, 0.04);
$knob-border-focused: solid 1px rgba(0, 0, 0, 0.16);
$knob-offset: ($knob-size - $bar-height) / 2;

$shadow-very-light:
  0 2px 2px  0   rgba(0, 0, 0, 0.07),
  0 1px 5px  0   rgba(0, 0, 0, 0.06),
  0 3px 1px -2px rgba(0, 0, 0, 0.10);

$shadow-light:
  0 2px 2px  0   rgba(0, 0, 0, 0.14),
  0 1px 5px  0   rgba(0, 0, 0, 0.12),
  0 3px 1px -2px rgba(0, 0, 0, 0.20);

$shadow-medium:
  0 3px 4px  0   rgba(0, 0, 0, 0.14),
  0 1px 8px  0   rgba(0, 0, 0, 0.12),
  0 3px 3px -2px rgba(0, 0, 0, 0.40);

$shadow-dark:
  0 6px 10px  0   rgba(0, 0, 0, 0.14),
  0 1px 18px  0   rgba(0, 0, 0, 0.12),
  0 3px  5px -1px rgba(0, 0, 0, 0.40);

:host {
  position: relative;
  display: inline-block;
  width: $bar-width + 2 * $knob-offset;
  width: calc(var(--catalyst-toggle-switch-bar-width, #{$bar-width}) + 2 * var(--catalyst-toggle-switch-knob-offset, #{$knob-offset}));
  height: $bar-height + 2 * $knob-offset;
  height: calc(var(--catalyst-toggle-switch-bar-height, #{$bar-height}) + 2 * var(--catalyst-toggle-switch-knob-offset, #{$knob-offset}));
  min-width: var(--catalyst-toggle-switch-bar-width, $bar-width);
  min-height: var(--catalyst-toggle-switch-bar-height, $bar-height);
  margin: 0 8px;
  vertical-align: middle;
}

#bar {
  position: absolute;
  top: $knob-offset;
  top: var(--catalyst-toggle-switch-knob-offset, $knob-offset);
  left: $knob-offset;
  left: var(--catalyst-toggle-switch-knob-offset, $knob-offset);
  width: $bar-width;
  width: var(--catalyst-toggle-switch-bar-width, $bar-width);
  height: $bar-height;
  height: var(--catalyst-toggle-switch-bar-height, $bar-height);
  cursor: pointer;
  background-color: $bar-bg-color;
  background-color: var(--catalyst-toggle-switch-bar-color, $bar-bg-color);
  border: $bar-border;
  border: var(--catalyst-toggle-switch-bar-border, $bar-border);
  border-radius: $bar-height / 2;
  border-radius: calc(var(--catalyst-toggle-switch-bar-height, #{$bar-height}) / 2);
  box-sizing: border-box;
  transition:
    background-color 0.3s ease,
    border 0.3s ease;
  will-change:
    background-color,
    border;

  &.negitive-knob-offset {
    top: 0;
    left: 0;
  }
}

#knob {
  position: absolute;
  top: -$knob-offset;
  top: calc(0px - var(--catalyst-toggle-switch-knob-offset, #{$knob-offset}) - var(--catalyst-toggle-switch-bar-border-top-wdith, 0px));
  left: -$knob-offset;
  left: calc(0px - var(--catalyst-toggle-switch-knob-offset, #{$knob-offset}) - var(--catalyst-toggle-switch-bar-border-left-wdith, 0px));
  width: $knob-size;
  width: var(--catalyst-toggle-switch-knob-size, $knob-size);
  height: $knob-size;
  height: var(--catalyst-toggle-switch-knob-size, $knob-size);
  background-color: $knob-bg-color;
  background-color: var(--catalyst-toggle-switch-knob-color, $knob-bg-color);
  border: $knob-border;
  border: var(--catalyst-toggle-switch-knob-border, $knob-border);
  border-radius: $knob-size / 2;
  border-radius: calc(var(--catalyst-toggle-switch-knob-size, #{$knob-size}) / 2);
  box-shadow: $shadow-light;
  box-shadow: var(--catalyst-toggle-switch-knob-box-shadow, $shadow-light);
  box-sizing: border-box;
  transition:
    width 0.28s ease,
    height 0.28s ease,
    background-color 0.28s ease,
    border 0.28s ease,
    transform 0.28s ease,
    box-shadow 0.28s cubic-bezier(0.4, 0, 0.2, 1);
  will-change:
    width,
    height,
    background-color,
    border,
    transform,
    box-shadow;

  &:hover {
    box-shadow: $shadow-medium;
    box-shadow: var(--catalyst-toggle-switch-knob-box-shadow, $shadow-medium);
  }
}

:host([checked]) {
  #knob {
    transform: translateX($bar-width + 2 * $knob-offset - $knob-size);
    transform: translateX(calc(var(--catalyst-toggle-switch-bar-width, #{$bar-width}) + 2 * var(--catalyst-toggle-switch-knob-offset, #{$knob-offset}) - var(--catalyst-toggle-switch-knob-size, #{$knob-size}) + var(--catalyst-toggle-switch-bar-border-left-wdith, 0px)));
  }
  .negitive-knob-offset {
    #knob {
      transform: translateX(calc(var(--catalyst-toggle-switch-bar-width, #{$bar-width}) + 2 * var(--catalyst-toggle-switch-knob-offset, #{$knob-offset}) - var(--catalyst-toggle-switch-knob-size, #{$knob-size}) + var(--catalyst-toggle-switch-bar-border-left-wdith, 0px) - (var(--catalyst-toggle-switch-bar-height, #{$bar-height}) - var(--catalyst-toggle-switch-knob-size, #{$knob-size})) / 2 + 1px));
    }
  }
}

:host([disabled]) {
  #bar {
    background-color: $bar-bg-disabled-color;
    background-color: var(--catalyst-toggle-switch-bar-color, $bar-bg-disabled-color);
  }

  #knob {
    background-color: $knob-bg-disabled-color;
    background-color: var(--catalyst-toggle-switch-knob-color, $bar-bg-disabled-color);
    box-shadow: $shadow-very-light;
    box-shadow: var(--catalyst-toggle-switch-knob-box-shadow, $shadow-very-light);
  }
}

:host(:focus) {
  outline: none;

  #knob {
    background-color: $knob-bg-color-focused;
    background-color: var(--catalyst-toggle-switch-knob-color, $knob-bg-color-focused);
    border: $knob-border-focused;
    border: var(--catalyst-toggle-switch-knob-border, $knob-border-focused);
    box-shadow: $shadow-dark;
    box-shadow: var(--catalyst-toggle-switch-knob-box-shadow, $shadow-dark);
  }
}

:host([hidden]) {
  display: none;
}
